---
name: ðŸ§³ Convert Markdown
on:
  workflow_call:
    inputs:
      Title:
        required: false
        type: string
        default: Innofactor
      Subtitle:
        required: false
        type: string
        default: DESIGN DOCUMENT
      Project:
        required: false
        type: string
        default: ""
      Folder:
        required: false
        type: string
        default: docs
      Template:
        required: false
        type: string
        default: designdoc
      OrderFile:
        required: false
        type: string
        default: document.order
      HistoryFile:
        required: false
        type: string
        default: ""
      ReplaceFile:
        required: false
        type: string
        default: ""
      OutFile:
        required: false
        type: string
        default: document.pdf
      DefaultAuthor:
        required: false
        type: string
        default: Innofactor
      DefaultDescription:
        required: false
        type: string
        default: Initial draft
      LimitVersionHistory:
        required: false
        type: number
        default: 15
      ForceDefault:
        required: false
        type: boolean
        default: false
      RetentionDays:
        required: false
        type: number
        default: 5

env:
  VERSION: v2.0.0

jobs:
  build:
    name: Convert Markdown
    runs-on: ubuntu-latest
    container:
      image: pandoc/extra:edge-alpine
      options: --entrypoint=sh
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install requirements
        shell: sh
        run: |
          apk add --no-cache git curl jq librsvg font-noto-cjk
          apk add --no-cache --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community font-carlito
          tlmgr update --self
          tlmgr install lastpage

      - name: Build PDF
        shell: sh
        env:
          AUTHOR: ${{ inputs.DefaultAuthor }}
          DESCRIPTION: ${{ inputs.DefaultDescription }}
          TITLE: ${{ inputs.Title }}
          SUBTITLE: ${{ inputs.Subtitle }}
          FOLDER: ${{ inputs.Folder }}
          FORCE_DEFAULT: ${{ inputs.ForceDefault }}
          HISTORY: ${{ inputs.HistoryFile }}
          LIMIT: ${{ inputs.LimitVersionHistory }}
          ORDER_FILE: ${{ inputs.OrderFile }}
          OUT_FILE: ${{ inputs.OutFile }}
          REPLACE_FILE: ${{ inputs.ReplaceFile }}
          PROJECT: ${{ inputs.Project }}
          TEMPLATE: ${{ inputs.Template }}
        run: |
          git config --global --add safe.directory '*'
          server='raw.githubusercontent.com'
          URL="https://${server}/innofactororg/markdown2pdf/${VERSION}/tools"
          curl -o ${TEMPLATE}-cover.png -sSL ${URL}/${TEMPLATE}-cover.png
          curl -o ${TEMPLATE}-logo.png -sSL ${URL}/${TEMPLATE}-logo.png
          curl -o ${TEMPLATE}.tex -sSL ${URL}/${TEMPLATE}.tex
          curl -o convert.sh -sSL ${URL}/convert.sh
          chmod +x ./convert.sh
          ./convert.sh -a "${AUTHOR}" -d "${DESCRIPTION}" -f "${FOLDER}" \
            -force "${FORCE_DEFAULT}" -h "${HISTORY}" -l ${LIMIT} \
            -o "${ORDER_FILE}" -out "${OUT_FILE}" -p "${PROJECT}" \
            -r "${REPLACE_FILE}" -s "${SUBTITLE}" -t "${TITLE}" \
            --template "${TEMPLATE}"

      - name: Publish PDF
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.OutFile }}
          if-no-files-found: error
          retention-days: ${{ inputs.RetentionDays }}
          path: |
            "${{ github.workspace }}/${{ inputs.OutFile }}"
            "${{ github.workspace }}/${{ inputs.OutFile }}.md"
