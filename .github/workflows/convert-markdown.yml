---
name: ðŸ§³ Convert Markdown

on:
  workflow_call:
    inputs:
      Title:
        required: false
        type: string
        default: Innofactor
      Subtitle:
        required: false
        type: string
        default: DESIGN DOCUMENT
      Project:
        required: false
        type: string
        default: ""
      Folder:
        required: false
        type: string
        default: docs
      Template:
        required: false
        type: string
        default: designdoc
      OrderFile:
        required: false
        type: string
        default: document.order
      HistoryFile:
        required: false
        type: string
        default: ""
      ReplaceFile:
        required: false
        type: string
        default: ""
      OutFile:
        required: false
        type: string
        default: document.pdf
      DefaultAuthor:
        required: false
        type: string
        default: Innofactor
      DefaultDescription:
        required: false
        type: string
        default: Initial draft
      LimitVersionHistory:
        required: false
        type: number
        default: 15
      ForceDefault:
        required: false
        type: boolean
        default: false
      RetentionDays:
        required: false
        type: number
        default: 5

jobs:
  build:
    name: Convert Markdown
    runs-on: ubuntu-latest
    container:
      image: pandoc/extra:edge-alpine
      options: --entrypoint=sh
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install requirements
        shell: sh
        run: |
          apk add --no-cache git jq librsvg font-noto-cjk
          apk add --no-cache --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community font-carlito
          tlmgr update --self
          tlmgr install lastpage

      - name: Build PDF
        shell: sh
        run: |
          git config --global --add safe.directory '*'
          tools/mdconvert.sh -a '${{ inputs.DefaultAuthor }}' -d '${{ inputs.DefaultDescription }}' -f '${{ inputs.Folder }}' -force '${{ inputs.ForceDefault }}' -h '${{ inputs.HistoryFile }}' -l ${{ inputs.LimitVersionHistory }} -o '${{ inputs.OrderFile }}' -out '${{ inputs.OutFile }}' -p '${{ inputs.Project }}' -r '${{ inputs.ReplaceFile }}' -s '${{ inputs.Subtitle }}' -t '${{ inputs.Title }}' --template '${{ inputs.Template }}'

      - name: Publish PDF
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.OutFile }}
          if-no-files-found: error
          retention-days: ${{ inputs.RetentionDays }}
          path: "${{ github.workspace }}/${{ inputs.OutFile }}"
